apiVersion: v1
kind: Secret
metadata:
  name: postgres-password
type: Opaque
stringData:
  postgres_password: gordonpass
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: appserver
  labels:
    com.docker.service.id: atsea-appserver
    com.docker.service.name: appserver
    com.docker.stack.namespace: atsea
spec:
    replicas: 1
    selector:
      matchLabels:
        com.docker.service.id: atsea-appserver
        com.docker.service.name: appserver
        com.docker.stack.namespace: atsea
    revisionHistoryLimit: 1
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        labels:
          com.docker.service.id: atsea-appserver
          com.docker.service.name: appserver
          com.docker.stack.namespace: atsea          
      spec:
        containers:
        - image: dockersamples/atsea_app
          name: appserver
          imagePullPolicy: IfNotPresent
          ports:
          - containerPort: 8080
            protocol: TCP
          - containerPort: 5005
            protocol: TCP
        restartPolicy: Always
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    com.docker.service.id: atsea-database
    com.docker.service.name: database
    com.docker.stack.namespace: atsea
  name: database
spec:
  replicas: 1
  selector:
    matchLabels:
      com.docker.service.id: atsea-database
      com.docker.service.name: database
      com.docker.stack.namespace: atsea
  template:
    metadata:
      labels:
        com.docker.service.id: atsea-database
        com.docker.service.name: database
        com.docker.stack.namespace: atsea
    spec:
      containers:
      - 
        env:
        - name: POSTGRES_DB
          value: atsea
        - name: POSTGRES_PASSWORD_FILE
          value: /run/secrets/postgres-password/postgres_password
        - name: POSTGRES_USER
          value: gordonuser
        - name: PGDATA
          value: /var/lib/postgresql/data/atseadata
        image: dockersamples/atsea_db
        imagePullPolicy: IfNotPresent
        name: database
        ports:
        - containerPort: 5432
          protocol: TCP
        volumeMounts:
        - mountPath: /run/secrets/postgres-password
          name: secret-0
          readOnly: true
        - name: atsea-db-pv-data
          mountPath: /var/lib/postgresql/data
          subPath: atseadata
      restartPolicy: Always
      volumes:
      - name: secret-0
        secret:
          # defaultMode: 420
          # items:
          # - key: C:\demo\atsea\devsecrets\postgres_password
          #   path: secret-0
          secretName: postgres-password
      - name: atsea-db-pv-data
        persistentVolumeClaim:
          claimName: atsea-db-pv-claim
---
apiVersion: v1
kind: Service
metadata:
  labels:
    com.docker.service.id: atsea-database
    com.docker.service.name: database
    com.docker.stack.namespace: atsea
  name: database
spec:
  ports:
  - port: 5432
    protocol: TCP
    targetPort: 5432
  selector:
    com.docker.service.id: atsea-database
    com.docker.service.name: database
    com.docker.stack.namespace: atsea
---
apiVersion: v1
kind: Service
metadata:
  labels:
    com.docker.service.id: atsea-appserver
    com.docker.service.name: appserver
    com.docker.stack.namespace: atsea
  name: appserver
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    com.docker.service.id: atsea-appserver
    com.docker.service.name: appserver
    com.docker.stack.namespace: atsea
  type: ClusterIP
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
  name: atsea-ingress
spec:
  rules:
  - host: atsea-dev.kube.west.us.se.dckr.org
    http:
      paths:
      - backend:
          serviceName: appserver
          servicePort: 8080
        path: /
status:
  loadBalancer: {}
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: atsea-db-pv-claim
  annotations:
    volume.beta.kubernetes.io/storage-class: efs
spec:
  storageClassName: efs
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Mi